project.buildDir = 'gradleBuild'
getProject().setBuildDir('gradleBuild')

buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        flatDir {
            dirs 'aar'
        }
    }
}

apply plugin: 'com.android.application'

def useNative = true

android {
    compileSdkVersion 23

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            // Android demo app sources.
            java {
                srcDir 'src'
            }

            manifest.srcFile 'AndroidManifest.xml'
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            //jniLibs.srcDirs = ['libs']

        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 23

        multiDexEnabled true
        if(useNative){
            externalNativeBuild {
                //-DSK_API
                cmake {
                    cppFlags "-std=c++14 -O0"
                    cFlags "-O0"
                }
            }
        }
        if(useNative) {
            ndk {
                // stl "gnustl_shared"
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }
    }
    if(useNative) {
        externalNativeBuild {
            cmake {
                path "jni/CMakeLists.txt"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation(name:'tensorflow', ext:'aar')

   // implementation 'org.tensorflow:tensorflow-android:1.7.0'
}

